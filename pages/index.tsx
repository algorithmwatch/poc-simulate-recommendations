import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { csv } from "d3-fetch";
import Item from "../components/item";
import { useState } from "react";

import _ from "lodash";

import { distance, parse } from "mathjs";

const Home: NextPage = ({ data }) => {
  const [value1, setValue1] = useState("0");
  const [value2, setValue2] = useState("0");
  const [value3, setValue3] = useState("0");
  const onChange1 = (event) => {
    setValue1(event.target.value);
  };
  const onChange2 = (event) => {
    setValue2(event.target.value);
  };
  const onChange3 = (event) => {
    setValue3(event.target.value);
  };

  const arg0 = [value1 || "0", value2 || "0", value3 || "0"].map(parseFloat);
  const arg1 = data.map((x) =>
    [x["cat1"], x["cat2"], x["cat3"]].map(parseFloat)
  );

  const dists = arg1.map((x) => distance(arg0, x));

  let orderedData = data.map(function (e, i) {
    return { ...e, dist: dists[i] };
  });

  console.log(dists);

  orderedData = _.orderBy(orderedData, "dist");

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Platform Simulator 3000!</h1>

        <input
          value={value1}
          onChange={onChange1}
          type="number"
          min="0"
          max="1"
          step="0.1"
        />
        <input
          value={value2}
          onChange={onChange2}
          type="number"
          min="0"
          max="1"
          step="0.1"
        />
        <input
          value={value3}
          onChange={onChange3}
          type="number"
          min="0"
          max="1"
          step="0.1"
        />

        {orderedData.map((x, i) => (
          <Item {...x} key={i} />
        ))}
        <div></div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

let data = null;

const setupData = async () => {
  if (data !== null) return data;

  let url = "http://localhost:3000/data.csv";
  if (process.env.NODE_ENV === "production") url = "http://toto.de/data.csv";

  data = await csv(url);

  return data;
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const data = await setupData();

  return {
    props: {
      data,
    },
  };
};

export default Home;
